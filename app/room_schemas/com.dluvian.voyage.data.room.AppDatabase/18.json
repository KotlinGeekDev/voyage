{
  "formatVersion": 1,
  "database": {
    "version": 18,
    "identityHash": "b1f310b02da3e228612cbc258c27a42a",
    "entities": [
      {
        "tableName": "post",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `pubkey` TEXT NOT NULL, `parentId` TEXT, `subject` TEXT, `content` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `relayUrl` TEXT NOT NULL, `crossPostedId` TEXT, `crossPostedPubkey` TEXT, `json` TEXT, `isMentioningMe` INTEGER NOT NULL DEFAULT false, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subject",
            "columnName": "subject",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "relayUrl",
            "columnName": "relayUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "crossPostedId",
            "columnName": "crossPostedId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "crossPostedPubkey",
            "columnName": "crossPostedPubkey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "json",
            "columnName": "json",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isMentioningMe",
            "columnName": "isMentioningMe",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_post_parentId",
            "unique": false,
            "columnNames": [
              "parentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_parentId` ON `${TABLE_NAME}` (`parentId`)"
          },
          {
            "name": "index_post_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_post_pubkey",
            "unique": false,
            "columnNames": [
              "pubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_pubkey` ON `${TABLE_NAME}` (`pubkey`)"
          },
          {
            "name": "index_post_crossPostedId",
            "unique": false,
            "columnNames": [
              "crossPostedId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_crossPostedId` ON `${TABLE_NAME}` (`crossPostedId`)"
          },
          {
            "name": "index_post_crossPostedPubkey",
            "unique": false,
            "columnNames": [
              "crossPostedPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_crossPostedPubkey` ON `${TABLE_NAME}` (`crossPostedPubkey`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "vote",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `postId` TEXT NOT NULL, `pubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`postId`, `pubkey`), FOREIGN KEY(`postId`) REFERENCES `post`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "postId",
            "pubkey"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "post",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "account",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `packageName` TEXT, PRIMARY KEY(`pubkey`))",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "packageName",
            "columnName": "packageName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "friend",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `friendPubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`friendPubkey`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "friendPubkey",
            "columnName": "friendPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "friendPubkey"
          ]
        },
        "indices": [
          {
            "name": "index_friend_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_friend_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "weboftrust",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`friendPubkey` TEXT NOT NULL, `webOfTrustPubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`webOfTrustPubkey`), FOREIGN KEY(`friendPubkey`) REFERENCES `friend`(`friendPubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "friendPubkey",
            "columnName": "friendPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "webOfTrustPubkey",
            "columnName": "webOfTrustPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "webOfTrustPubkey"
          ]
        },
        "indices": [
          {
            "name": "index_weboftrust_friendPubkey",
            "unique": false,
            "columnNames": [
              "friendPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_weboftrust_friendPubkey` ON `${TABLE_NAME}` (`friendPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "friend",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "friendPubkey"
            ],
            "referencedColumns": [
              "friendPubkey"
            ]
          }
        ]
      },
      {
        "tableName": "topic",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `topic` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`topic`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "topic"
          ]
        },
        "indices": [
          {
            "name": "index_topic_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_topic_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "hashtag",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`postId` TEXT NOT NULL, `hashtag` TEXT NOT NULL, PRIMARY KEY(`postId`, `hashtag`), FOREIGN KEY(`postId`) REFERENCES `post`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hashtag",
            "columnName": "hashtag",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "postId",
            "hashtag"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "post",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "nip65",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `url` TEXT NOT NULL, `isRead` INTEGER NOT NULL, `isWrite` INTEGER NOT NULL, PRIMARY KEY(`pubkey`, `url`))",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nip65Relay.url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nip65Relay.isRead",
            "columnName": "isRead",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nip65Relay.isWrite",
            "columnName": "isWrite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey",
            "url"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "profile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `name` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`pubkey`))",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey"
          ]
        },
        "indices": [
          {
            "name": "index_profile_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_profile_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "fullProfile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pubkey` TEXT NOT NULL, `name` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `about` TEXT NOT NULL, `picture` TEXT NOT NULL, `lud06` TEXT NOT NULL, `lud16` TEXT NOT NULL, `nip05` TEXT NOT NULL, `displayName` TEXT NOT NULL, `website` TEXT NOT NULL, `banner` TEXT NOT NULL, PRIMARY KEY(`pubkey`), FOREIGN KEY(`pubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "about",
            "columnName": "about",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "picture",
            "columnName": "picture",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lud06",
            "columnName": "lud06",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lud16",
            "columnName": "lud16",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nip05",
            "columnName": "nip05",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "banner",
            "columnName": "banner",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pubkey"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "bookmark",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `postId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`postId`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "postId"
          ]
        },
        "indices": [
          {
            "name": "index_bookmark_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_bookmark_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "profileSet",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `myPubkey` TEXT NOT NULL, `title` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `deleted` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`identifier`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier"
          ]
        },
        "indices": [
          {
            "name": "index_profileSet_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_profileSet_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "profileSetItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `pubkey` TEXT NOT NULL, PRIMARY KEY(`identifier`, `pubkey`), FOREIGN KEY(`identifier`) REFERENCES `profileSet`(`identifier`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubkey",
            "columnName": "pubkey",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier",
            "pubkey"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "profileSet",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "identifier"
            ],
            "referencedColumns": [
              "identifier"
            ]
          }
        ]
      },
      {
        "tableName": "topicSet",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `myPubkey` TEXT NOT NULL, `title` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `deleted` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`identifier`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier"
          ]
        },
        "indices": [
          {
            "name": "index_topicSet_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_topicSet_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      },
      {
        "tableName": "topicSetItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifier` TEXT NOT NULL, `topic` TEXT NOT NULL, PRIMARY KEY(`identifier`, `topic`), FOREIGN KEY(`identifier`) REFERENCES `topicSet`(`identifier`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifier",
            "topic"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "topicSet",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "identifier"
            ],
            "referencedColumns": [
              "identifier"
            ]
          }
        ]
      },
      {
        "tableName": "mute",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`myPubkey` TEXT NOT NULL, `mutedItem` TEXT NOT NULL, `tag` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`mutedItem`, `tag`), FOREIGN KEY(`myPubkey`) REFERENCES `account`(`pubkey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "myPubkey",
            "columnName": "myPubkey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mutedItem",
            "columnName": "mutedItem",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "mutedItem",
            "tag"
          ]
        },
        "indices": [
          {
            "name": "index_mute_myPubkey",
            "unique": false,
            "columnNames": [
              "myPubkey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mute_myPubkey` ON `${TABLE_NAME}` (`myPubkey`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "myPubkey"
            ],
            "referencedColumns": [
              "pubkey"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "RootPostView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT \n            post.id, \n            post.pubkey, \n            post.subject, \n            post.content, \n            post.createdAt, \n            post.relayUrl, \n            post.crossPostedId, \n            post.crossPostedPubkey, \n            post.isMentioningMe, \n            profile.name AS authorName,\n            ht.hashtag AS myTopic,\n            CASE WHEN account.pubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsOneself,\n            CASE WHEN friend.friendPubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsFriend,\n            CASE WHEN weboftrust.webOfTrustPubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsTrusted,\n            CASE WHEN mute.mutedItem IS NOT NULL THEN 1 ELSE 0 END AS authorIsMuted,\n            CASE WHEN profileSetItem.pubkey IS NOT NULL THEN 1 ELSE 0 END AS authorIsInList,\n            CASE WHEN vote.postId IS NOT NULL THEN 1 ELSE 0 END isUpvoted,\n            upvotes.upvoteCount,\n            replies.replyCount,\n            CASE WHEN cross_posted_account.pubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsOneself,\n            CASE WHEN cross_posted_friend.friendPubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsFriend,\n            CASE WHEN cross_posted_wot.webOfTrustPubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsTrusted,\n            CASE WHEN cross_posted_mute.mutedItem IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsMuted,\n            CASE WHEN cross_posted_profile_set_item.pubkey IS NOT NULL THEN 1 ELSE 0 END AS crossPostedAuthorIsInList,\n            (SELECT EXISTS(SELECT * FROM bookmark WHERE bookmark.postId = IFNULL(post.crossPostedId, post.id))) AS isBookmarked \n        FROM post\n        LEFT JOIN profile ON profile.pubkey = post.pubkey\n        LEFT JOIN (\n            SELECT hashtag.postId, hashtag.hashtag \n            FROM hashtag \n            JOIN topic ON hashtag.hashtag = topic.topic\n            WHERE topic.myPubkey = (SELECT pubkey FROM account LIMIT 1)\n        ) AS ht ON ht.postId = post.id\n        LEFT JOIN account ON account.pubkey = post.pubkey\n        LEFT JOIN friend ON friend.friendPubkey = post.pubkey\n        LEFT JOIN weboftrust ON weboftrust.webOfTrustPubkey = post.pubkey\n        LEFT JOIN mute ON mute.mutedItem = post.pubkey AND mute.tag IS 'p'\n        LEFT JOIN profileSetItem ON profileSetItem.pubkey = post.pubkey\n        LEFT JOIN vote ON vote.postId = IFNULL(post.crossPostedId, post.id) AND vote.pubkey = (SELECT pubkey FROM account LIMIT 1)\n        LEFT JOIN (\n            SELECT vote.postId, COUNT(*) AS upvoteCount \n            FROM vote \n            GROUP BY vote.postId\n        ) AS upvotes ON upvotes.postId = IFNULL(post.crossPostedId, post.id)\n        LEFT JOIN (\n            SELECT post2.parentId, COUNT(*) AS replyCount \n            FROM post AS post2 \n            WHERE post2.parentId IS NOT NULL \n            AND post2.pubkey NOT IN (SELECT mutedItem FROM mute WHERE tag IS 'p')\n            GROUP BY post2.parentId\n        ) AS replies ON replies.parentId = IFNULL(post.crossPostedId, post.id)\n        LEFT JOIN account AS cross_posted_account ON cross_posted_account.pubkey = post.crossPostedPubkey\n        LEFT JOIN friend AS cross_posted_friend ON cross_posted_friend.friendPubkey = post.crossPostedPubkey\n        LEFT JOIN weboftrust AS cross_posted_wot ON cross_posted_wot.webOfTrustPubkey = post.crossPostedPubkey\n        LEFT JOIN mute AS cross_posted_mute ON cross_posted_mute.mutedItem = post.crossPostedPubkey AND cross_posted_mute.tag IS 'p'\n        LEFT JOIN profileSetItem AS cross_posted_profile_set_item ON cross_posted_profile_set_item.pubkey = post.crossPostedPubkey\n        WHERE post.parentId IS NULL"
      },
      {
        "viewName": "AdvancedProfileView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT profile.pubkey, profile.name,  (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = profile.pubkey)) AS isFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = profile.pubkey)) AS isWebOfTrust, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = profile.pubkey)) AS isMe, (SELECT EXISTS(SELECT * FROM mute WHERE mute.mutedItem = profile.pubkey AND mute.tag IS 'p')) AS isMuted, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = profile.pubkey)) AS isInList FROM profile"
      },
      {
        "viewName": "EventRelayAuthorView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT post.pubkey, post.relayUrl, COUNT(*) AS relayCount FROM post GROUP BY post.pubkey, post.relayUrl"
      },
      {
        "viewName": "ReplyView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT post.id, post.parentId, post.pubkey, post.content, post.createdAt, post.relayUrl, post.isMentioningMe, (SELECT name FROM profile WHERE profile.pubkey = post.pubkey) AS authorName, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = post.pubkey)) AS authorIsOneself, (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = post.pubkey)) AS authorIsFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = post.pubkey)) AS authorIsTrusted, (SELECT EXISTS(SELECT * FROM mute WHERE mute.mutedItem = post.pubkey AND mute.tag IS 'p')) AS authorIsMuted, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = post.pubkey)) AS authorIsInList, (SELECT EXISTS(SELECT* FROM vote WHERE vote.postId = post.id AND vote.pubkey = (SELECT pubkey FROM account LIMIT 1))) AS isUpvoted, (SELECT COUNT(*) FROM vote WHERE vote.postId = post.id) AS upvoteCount, (SELECT COUNT(*) FROM post AS post2 WHERE post2.parentId = post.id AND post2.pubkey NOT IN (SELECT mutedItem FROM mute WHERE tag IS 'p')) AS replyCount, (SELECT EXISTS(SELECT * FROM bookmark WHERE bookmark.postId = IFNULL(post.crossPostedId, post.id))) AS isBookmarked FROM post WHERE post.parentId IS NOT NULL"
      },
      {
        "viewName": "SimplePostView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT post.id, post.pubkey, post.subject, post.content, (SELECT EXISTS(SELECT * FROM account WHERE account.pubkey = post.pubkey)) AS authorIsOneself, (SELECT EXISTS(SELECT * FROM friend WHERE friend.friendPubkey = post.pubkey)) AS authorIsFriend, (SELECT EXISTS(SELECT * FROM weboftrust WHERE weboftrust.webOfTrustPubkey = post.pubkey)) AS authorIsTrusted, (SELECT EXISTS(SELECT * FROM mute WHERE mute.mutedItem = post.pubkey AND mute.tag IS 'p')) AS authorIsMuted, (SELECT EXISTS(SELECT * FROM profileSetItem WHERE profileSetItem.pubkey = post.pubkey)) AS authorIsInList FROM post WHERE crossPostedId IS NULL AND crossPostedPubkey IS NULL"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b1f310b02da3e228612cbc258c27a42a')"
    ]
  }
}